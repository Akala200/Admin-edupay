{"version":3,"sources":["C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.component.html","C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.component.scss","C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.component.ts","C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.module.ts","C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.service.ts","C:/Users/Delivery Science/Downloads/startng/node_modules/ngx-pagination/dist/ngx-pagination.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,gqBAAgqB,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,0RAA0R,yBAAyB,kCAAkC,cAAc,oIAAoI,4BAA4B,kCAAkC,cAAc,qSAAqS,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AAC18D,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,sCAAsC,wBAAwB,kCAAkC,qBAAqB,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE;;AAEjrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D,WAAW;AACzE;AACA,gBAAgB,6DAAc;AAC9B,qBAAqB,6DAAc;AACnC,4BAA4B,6DAAc;AAC1C,sBAAsB,6DAAc;AACpC,2BAA2B,6DAAc;AACzC,uBAAuB,6DAAc;AACrC,yCAAyC,6DAAc;AACvD,mCAAmC,6DAAc;AACjD,sCAAsC,6DAAc;AACpD,wBAAwB,8DAAe;AACvaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,2BAA2B;AACpC,SAAS,0EAA2B;AACpC,MAAM;AACN;AACA,gBAAgB,6DAAc;AAC9B,qBAAqB,6DAAc;AACnC,wBAAwB,8DAAe;AACvC;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA;;AAEQ","file":"membership.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row mb-1\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <div class=\\\"input-group mb-3 box-shadow\\\"> \\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text border-top-0 border-left-0 border-bottom-0\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>                   \\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search school by name...\\\" class=\\\"form-control border-0\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let school of schools | paginate: { itemsPerPage: 9, currentPage: p }; let i = index;\\\" class=\\\"col-xl-4 col-lg-6 mb-4\\\">\\r\\n        <div class=\\\"flip\\\">\\r\\n            <div class=\\\"content\\\">\\r\\n                <div class=\\\"front\\\">\\r\\n                    <div class=\\\"card border-0 box-shadow rounded-0\\\">\\r\\n                        <div class=\\\"card-header border-0 rounded-0 text-muted\\\">\\r\\n                            <h6 class=\\\"mb-0\\\" style=\\\"color: #000 !important;\\\" >\\r\\n                                <i *ngIf=\\\"!school.settings.isDeleted\\\" class=\\\"fa fa-user mr-2\\\" [ngClass]=\\\"{ 'text-success': school.settings.isActive, \\r\\n                                                                        'text-inverse': !school.settings.isActive}\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"(school.settings.isActive) ? 'active' : 'passive'\\\"></i>\\r\\n                                <i *ngIf=\\\"school.settings.isDeleted\\\" class=\\\"fa fa-user mr-2 text-danger\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"'deleted'\\\"></i>\\r\\n                                {{school.fullname}}                            </h6>\\r\\n                            <div class=\\\"widget-controls\\\"> \\r\\n                                <a (click)=\\\"openMenuAssign($event)\\\" href=\\\"javascript:void(0);\\\" class=\\\"transition\\\"><i class=\\\"fa fa-bars\\\"></i></a> \\r\\n                                <a (click)=\\\"deleteSchool(school)\\\" href=\\\"javascript:void(0);\\\" class=\\\"transition\\\"><i class=\\\"fa fa-trash\\\"></i></a> \\r\\n                            </div>        \\r\\n                        </div>\\r\\n                        <div class=\\\"card-body pt-3\\\">\\r\\n                            \\r\\n                            <div class=\\\"media\\\">\\r\\n                                <div class=\\\"d-flex flex-column justify-content-center\\\">\\r\\n                                   \\r\\n                                </div>                    \\r\\n                                <div class=\\\"media-body ml-3\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4 text-gray text-right pr-0 font-italic text-truncate\\\" style=\\\"color: #000 !important; font-size: 13px;\\\"><b>Email:</b></div>\\r\\n                                        <div class=\\\"col-8 pl-2 text-truncate\\\">{{school.email}}</div>                          \\r\\n                                        <div class=\\\"col-4 text-gray text-right pr-0 font-italic text-truncate\\\" style=\\\"color: #000 !important; font-size: 13;\\\"><b>Phone:</b></div>\\r\\n                                        <div class=\\\"col-8 pl-2 text-truncate\\\">{{school.phoneNumber}}</div>\\r\\n                                        <div class=\\\"col-4 text-gray text-right pr-0 font-italic text-truncate\\\" style=\\\"color: #000 !important; font-size: 13;\\\"><b>Street:</b></div>\\r\\n                                        <div class=\\\"col-8 pl-2 text-truncate\\\">{{school.addressLine1}}</div>\\r\\n                                        <div class=\\\"col-4 text-gray text-right pr-0 font-italic text-truncate\\\" style=\\\"color: #000 !important; font-size: 13;\\\"><b>City:</b></div>\\r\\n                                        <div class=\\\"col-8 pl-2 text-truncate\\\">{{school.addressCity}}</div>\\r\\n                                        <div class=\\\"col-4 text-gray text-right pr-0 font-italic text-truncate\\\" style=\\\"color: #000 !important; font-size: 13;\\\"><b>State:</b></div>\\r\\n                                        <div class=\\\"col-8 pl-2 text-truncate\\\">{{school.addressState}}</div>\\r\\n                                        <div class=\\\"col-4 text-gray text-right pr-0 font-italic text-truncate\\\" style=\\\"color: #000 !important; font-size: 13;\\\"><b>Country:</b></div>\\r\\n                                        <div class=\\\"col-8 pl-2 text-truncate fs-12 pt-2p\\\">{{school.addressCountry}}</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"back\\\">\\r\\n                    <div class=\\\"card border-0 box-shadow rounded-0\\\">\\r\\n                        <div class=\\\"card-header border-0 rounded-0 text-muted\\\">\\r\\n                            <h5 class=\\\"mb-0\\\">\\r\\n                                <i *ngIf=\\\"!school.settings.isDeleted\\\" class=\\\"fa fa-user mr-2\\\" [ngClass]=\\\"{ 'text-success': school.settings.isActive, \\r\\n                                                                        'text-inverse': !school.settings.isActive}\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"(school.settings.isActive) ? 'active' : 'passive'\\\"></i>\\r\\n                                <i *ngIf=\\\"school.settings.isDeleted\\\" class=\\\"fa fa-user mr-2 text-danger\\\" placement=\\\"bottom\\\" [ngbTooltip]=\\\"'Not activated'\\\"></i>\\r\\n                                {{school.fullname}}\\r\\n                            </h5>\\r\\n                            <div class=\\\"widget-controls\\\"> \\r\\n                                <a (click)=\\\"closeMenuAssign($event)\\\" href=\\\"javascript:void(0);\\\" class=\\\"transition\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n                            </div>        \\r\\n                        </div>\\r\\n                        <div class=\\\"card-body pt-3\\\">            \\r\\n                            <div class=\\\"w-100 text-center pt-3\\\">\\r\\n                                <button class=\\\"btn btn-success\\\" (click)=\\\"activateSchool(school)\\\"> Activate school </button>\\r\\n                                <p class=\\\"text-gray fs-13 mt-2\\\">Click to activate school.</p>\\r\\n                            </div>                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" >\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <div class=\\\"bg-white text-center\\\">\\r\\n            <pagination-controls autoHide=\\\"true\\\" (pageChange)=\\\"p = $event\\\" maxSize=\\\"3\\\"></pagination-controls>\\r\\n        </div>        \\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.component.html\n// module id = ../../../../../src/app/pages/membership/membership.component.html\n// module chunks = membership.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flip {\\n  width: 100%;\\n  height: 230px;\\n  position: relative;\\n  -webkit-perspective: 800px;\\n  -o-perspective: 800px;\\n  perspective: 800px; }\\n  .flip .content {\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    -webkit-transition: -webkit-transform 0.6s;\\n    transition: -webkit-transform 0.6s;\\n    transition: transform 0.6s;\\n    transition: transform 0.6s, -webkit-transform 0.6s;\\n    -webkit-transform-style: preserve-3d;\\n    transform-style: preserve-3d; }\\n  .flip .content div.front, .flip .content div.back {\\n      height: 100%;\\n      width: 100%;\\n      position: absolute;\\n      z-index: 0;\\n      -webkit-backface-visibility: hidden;\\n      backface-visibility: hidden; }\\n  .flip .content div.front .card, .flip .content div.back .card {\\n        height: 230px; }\\n  .flip .content div.back {\\n      z-index: 1;\\n      -webkit-transform: rotateY(180deg);\\n      transform: rotateY(180deg); }\\n  .flip .content div.back .dropdown {\\n        width: 100%; }\\n  .flip .content div.back .dropdown .dropdown-menu {\\n          width: 100%;\\n          margin-top: -1px; }\\n  .flip .content div.back .dropdown .dropdown-menu a {\\n            color: #666; }\\n  .flip .content div.back .dropdown .dropdown-menu a .fa-check {\\n              color: #378D3B; }\\n  .flip .content div.back .dropdown .dropdown-menu a .fa-times {\\n              color: #D22E2E; }\\n  .flip .content.flipped {\\n      -webkit-transform: rotateY(180deg);\\n      transform: rotateY(180deg); }\\n  .z-index-1 {\\n  z-index: 1; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.component.scss\n// module id = ../../../../../src/app/pages/membership/membership.component.scss\n// module chunks = membership.module","import { Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\r\nimport { IMultiSelectOption, IMultiSelectSettings, IMultiSelectTexts } from 'angular-2-dropdown-multiselect';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { School } from './membership.model';\r\nimport { MembershipService } from './membership.service';\r\nimport { MenuService } from '../../theme/components/menu/menu.service';\r\nimport { SchoolService } from '../../services/school.service';\r\n\r\n@Component({\r\n  selector: 'app-membership',\r\n  templateUrl: './membership.component.html',\r\n  styleUrls: ['./membership.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [ MembershipService, MenuService, SchoolService ]\r\n})\r\nexport class MembershipComponent implements OnInit {\r\n\r\n  public menuItems: Array<any>;\r\n  Allstatus: any = [];\r\n  private schools: School[];\r\n  private school: School;\r\n  private searchText: string;\r\n  private p: any;\r\n  private modalRef: NgbModalRef;\r\n  private form: FormGroup;\r\n  private genderOption: string;\r\n\r\n  public menuSelectSettings: IMultiSelectSettings = {\r\n      enableSearch: true,\r\n      checkedStyle: 'fontawesome',\r\n      buttonClasses: 'btn btn-secondary btn-block',\r\n      dynamicTitleMaxItems: 0,\r\n      displayAllSelectedText: true,\r\n      showCheckAll: true,\r\n      showUncheckAll: true\r\n  };\r\n  public menuSelectTexts: IMultiSelectTexts = {\r\n      checkAll: 'Select all',\r\n      uncheckAll: 'Unselect all',\r\n      checked: 'menu item selected',\r\n      checkedPlural: 'menu items selected',\r\n      searchPlaceholder: 'Find menu item...',\r\n      defaultTitle: 'Select menu items for user',\r\n      allSelected: 'All selected',\r\n  };\r\n  public menuSelectOptions: IMultiSelectOption[] = [];\r\n\r\n  constructor(public fb: FormBuilder,\r\n              public toastrService: ToastrService,\r\n              public membershipService: MembershipService,\r\n              public menuService: MenuService,\r\n              public modalService: NgbModal) {\r\n\r\n    this.menuItems = this.menuService.getVerticalMenuItems();\r\n    this.menuItems.forEach(item => {\r\n      const menu = {\r\n        id: item.id,\r\n        name: item.title\r\n      }\r\n      this.menuSelectOptions.push(menu);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n    this.form = this.fb.group({\r\n        id: null,\r\n        username: [null, Validators.compose([Validators.required, Validators.minLength(5)])],\r\n        password: [null, Validators.compose([Validators.required, Validators.minLength(6)])],\r\n        profile: this.fb.group({\r\n          name: null,\r\n          surname: null,\r\n          birthday: null,\r\n          gender: null,\r\n          image: null\r\n        }),\r\n        work: this.fb.group({\r\n          company: null,\r\n          position: null,\r\n          salary: null\r\n        }),\r\n        contacts: this.fb.group({\r\n          email: null,\r\n          phone: null,\r\n          address: null\r\n        }),\r\n        social: this.fb.group({\r\n          facebook: null,\r\n          twitter: null,\r\n          google: null\r\n        }),\r\n        settings: this.fb.group({\r\n          isActive: null,\r\n          isDeleted: null,\r\n          registrationDate: null,\r\n          joinedDate: null\r\n        }),\r\n        menuIds: null\r\n    });\r\n  }\r\n\r\n  public getUsers(): void {\r\n    this.membershipService.get_schools().subscribe((res: any[]) => {\r\n      this.schools = res;\r\n      });\r\n    }\r\n\r\n\r\n  public openMenuAssign(event) {\r\n    let parent = event.target.parentNode;\r\n    while (parent) {\r\n      parent = parent.parentNode;\r\n      if (parent.classList.contains('content')) {\r\n        parent.classList.add('flipped');\r\n        parent.parentNode.parentNode.classList.add('z-index-1');\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public closeMenuAssign(event) {\r\n    let parent = event.target.parentNode;\r\n    while (parent) {\r\n      parent = parent.parentNode;\r\n      if (parent.classList.contains('content')) {\r\n        parent.classList.remove('flipped');\r\n        parent.parentNode.parentNode.classList.remove('z-index-1');\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public assignMenuItemsToUser(school) {\r\n    sessionStorage.setItem('userMenuItems', JSON.stringify(school.menuIds));\r\n    this.toastrService.success('Please, logout and login to see result.', 'Successfully assigned !');\r\n  }\r\n\r\n  public openModal(modalContent, school) {\r\n    if (school) {\r\n      this.school = school;\r\n      this.form.setValue(school);\r\n    } else {\r\n      this.school = new school();\r\n      this.school.settings = new school();\r\n    }\r\n    this.modalRef = this.modalService.open(modalContent, { container: '.app' });\r\n\r\n    this.modalRef.result.then((result) => {\r\n      this.form.reset();\r\n      this.genderOption = null;\r\n    }, (reason) => {\r\n      this.form.reset();\r\n      this.genderOption = null;\r\n    });\r\n  }\r\n\r\n  public closeModal() {\r\n    this.modalRef.close();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MultiselectDropdownModule } from 'angular-2-dropdown-multiselect';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { MembershipComponent } from './membership.component';\r\nimport { MembershipService } from './membership.service';\r\n\r\n\r\nexport const routes = [\r\n  { path: '', component: MembershipComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    MultiselectDropdownModule,\r\n    NgxPaginationModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    MembershipComponent\r\n  ]\r\n})\r\nexport class MembershipModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.module.ts","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/observable';\r\nimport { School } from '../../model/school.model';\r\n\r\n@Injectable()\r\nexport class MembershipService {\r\n    baseUrl = 'http://edupay-api.azurewebsites.net';\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    get_schools() {\r\n        return this.http.get(this.baseUrl + '/school/get-all');\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Delivery Science/Downloads/startng/src/app/pages/membership/membership.service.ts","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginatePipe.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n    ]; };\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\n\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsComponent.ctorParameters = function () { return []; };\r\n    PaginationControlsComponent.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'directionLinks': [{ type: Input },],\r\n        'autoHide': [{ type: Input },],\r\n        'previousLabel': [{ type: Input },],\r\n        'nextLabel': [{ type: Input },],\r\n        'screenReaderPaginationLabel': [{ type: Input },],\r\n        'screenReaderPageLabel': [{ type: Input },],\r\n        'screenReaderCurrentLabel': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsComponent;\r\n}());\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (!this.service.getInstance(this.id).id) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    PaginationControlsDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsDirective.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n        { type: ChangeDetectorRef, },\r\n    ]; };\r\n    PaginationControlsDirective.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\n\nvar NgxPaginationModule = (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaginationModule.ctorParameters = function () { return []; };\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Delivery Science/Downloads/startng/node_modules/ngx-pagination/dist/ngx-pagination.js\n// module id = ../../../../ngx-pagination/dist/ngx-pagination.js\n// module chunks = membership.module"],"sourceRoot":"webpack:///"}